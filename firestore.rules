rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function getRole(rsc) {
      return rsc.data.acl[request.auth.uid];
    }

    function isOneOfRoles(rsc, array) {
      return isSignedIn() && getRole(rsc) != null && (getRole(rsc) in array);
    }

    function writeAclZ(rsc) {
      return isOneOfRoles(rsc, ['write', 'admin']);
    }

    function readAclZ(rsc) {
      return isOneOfRoles(rsc, ['read', 'write', 'admin']);
    }

    match /campaigns/{campaignId} {

      function campaignDoc() {
        return get(/databases/$(database)/documents/campaigns/$(campaignId));
      }
      function campaignReader() {
        return readAclZ(campaignDoc());
      }
      function campaignWriter() {
        return writeAclZ(campaignDoc());
      }

      allow read: if readAclZ(resource)
      allow update: if writeAclZ(resource)
      allow create: if false
      allow delete: if false
      match /messages/{messageId} {
        allow read: if campaignReader()
        allow create: if campaignReader()
        allow update: if campaignWriter()
        allow delete: if campaignWriter()
      }
      match /characters/{characterId} {
        function characterDoc() {
          return get(/databases/$(database)/documents/campaigns/$(campaignId)/characters/$(characterId));
        }
        allow read: if campaignReader()
        allow update: if campaignWriter() || writeAclZ(characterDoc())
        allow create: if false
        allow delete: if false
        match /messages/{messageId} {
          allow read, write: if campaignWriter() || writeAclZ(characterDoc())
        }
      }
    }

    match /rules/{document=**} {
      allow read: if isSignedIn()
      allow write: if false
    }

    match /users/{userId} {
      allow read: if isSignedIn()
      allow write: if userId == request.auth.uid && request.resource.data.premium == resource.data.premium
      match /messages/{messageId} {
        allow read: if userId == request.auth.id
        allow write: if isSignedIn()
      }
      match /characters/{characterId} {
        allow read, write: if userId == request.auth.id
      }
    }

    match /{document=**} {
      allow read, write: if false
    }
  }
}