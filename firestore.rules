rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function getData(table, id) {
      return get(/databases/$(database)/documents/$(table)/$(id))
    }

    function getRole(rsc) {
      return rsc.data.acl[request.auth.uid];
    }

    function premium() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.premium == true;
    }

    function isOneOfRoles(rsc, array) {
      return isSignedIn() && getRole(rsc) != null && (getRole(rsc) in array);
    }

    function writeAclZ(rsc) {
      return isOneOfRoles(rsc, ['write', 'admin']);
    }

    function readAclZ(rsc) {
      return isOneOfRoles(rsc, ['read', 'write', 'admin']);
    }

    match /campaigns/{campaignId} {

      function campaignReader() {
        return readAclZ(get(/databases/$(database)/documents/campaigns/$(campaignId)));
      }

      function campaignWriter() {
        return writeAclZ(get(/databases/$(database)/documents/campaigns/$(campaignId)));
      }

      allow read: if campaignReader()
      allow update: if campaignWriter()
      allow create: if isSignedIn()
      match /messages/{messageId} {
        allow read: if campaignReader()
        allow create: if campaignReader()
        allow update: if campaignWriter()
        allow delete: if campaignWriter()
      }
      match /characters/{characterId} {
        function characterDoc() {
          return get(/databases/$(database)/documents/campaigns/$(campaignId)/characters/$(characterId));
        }
        allow read: if campaignReader()
        allow update: if campaignWriter() || readAclZ(resource)
        allow create: if campaignWriter()
        allow delete: if false
        match /messages/{messageId} {
          allow read, write: if campaignWriter() || writeAclZ(characterDoc())
        }
      }
    }

    match /rules/{document=**} {
      allow read: if isSignedIn()
      allow write: if false
    }

    match /users/{userId} {
      allow read: if isSignedIn()
      allow write: if userId == auth.uid && request.resource.data.premium === resource.data.premium
      match /messages/{messageId} {
        allow read: if userId == auth.id
        allow write: if isSignedIn()
      }
      match /characters/{characterId} {
        allow read, write: if userId == auth.id
      }
    }

    match /{document=**} {
      allow read, write: if false
    }
  }
}